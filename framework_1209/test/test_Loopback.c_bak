#include "system_includes.h"
#include "system_debug.h"
#include "libcapture.h"
#include "libdisplay.h"
#include "libosd.h"
//#include <poll.h>
//#include <sys/time.h>
//#include <time.h>

Capture_Handle Capphandle = NULL;
Display_Handle Disphandle = NULL;

void cleanup(int sig)
{
	Capture_destroy(Capphandle);
	Display_destroy(Disphandle);
}


int main(int argc, char **argv)
{
	CaptureBuffer	capbuf;
	DisplayBuffer	disbuf;
	CaptureAttr		capattr;
	DisplayAttr		disattr;
	struct v4l2_buffer v4l2buf;
	struct pollfd poll_cap[1];
//	Resize_Handle rszHandle;
//	struct timeval start;
//	struct timeval end;

	int count = 0;
	int ret;
	DrawType drawtype;
	char *text;
	int x, y;

	x=360;y = 240;


	if(argc < 2)
	{
		SYS_ERROR("usage: ./%s time \n\r./%s char\n\r ./%s chinese.\r\n",
					__FILE__, __FILE__, __FILE__);
		return 0;
	}


	if(strcmp(argv[1], "time") == 0)
	{
		drawtype = TIME;
		text = NULL;
	}

	else if(strcmp(argv[1], "char") == 0)
	{
		text="ABCDEFGH";
		drawtype = CHAR;
	}
	else if(strcmp(argv[1], "chinese") == 0)
	{
		text="西安电子科技大学";
		drawtype = CHINESE;
	}
	else
	{
		SYS_ERROR("draw type is unknown\r\n");
		return -1;
	}


	memset(&capattr, 0x00, sizeof(struct CaptureAttr));
	capattr.bufNum    = 3;
	capattr.userAlloc = 0;
#if 1
	Capphandle = Capture_init(&capattr);
	if(Capphandle == NULL)
	{
		SYS_ERROR("Capture_init failed ..\r\n");
		return -1;
	}

	memset(&disattr, 0x00, sizeof(struct DisplayAttr));
	disattr.bufNum    = 3;
	disattr.userAlloc = 0;
	Disphandle = Display_init(&disattr);
	if(Disphandle == NULL)
	{
		SYS_ERROR("Display_init failed ..\r\n");
		return -1;
	}

	signal(SIGINT, cleanup);

#endif
#if 0
	memset(poll_cap, 0x00, sizeof(struct pollfd));

	int fd = open("data.txt",O_RDWR );
	if(fd <=0 )
	{
		printf("open error.\r\n");
		return -1;
	}
	poll_cap[0].fd = Capphandle->capture_fd;
	//poll_cap[0].fd = fd;
	poll_cap[0].events = POLLIN;

	SYS_INFO("POLLIN %x",POLLIN);
	SYS_INFO("POLLOUT %x",POLLOUT);
	SYS_INFO("POLLPRI %x",POLLPRI);
	SYS_INFO("POLLERR %x",POLLERR);

	rszHandle = Resize_init(NULL);
	if(rszHandle == NULL)
	{
		SYS_ERROR("Resize_init error.\r\n");
		return -1;
	}
#endif
	while(1)
	{
		//SYS_INFO("count %d.\r\n",count++);
		//SYS_INFO("before poll..\r\n");
		int ret;
			//SYS_INFO("after poll..ret %d revents %x\r\n", ret, poll_cap[0].revents);
		ret = Capture_get(Capphandle, &capbuf);	
		if(ret < 0)
		{
			SYS_ERROR("Capture_get failed ..\r\n");
			return -1;
		}

		ret = Display_get(Disphandle, &disbuf);	
		if(ret < 0)
		{
			SYS_ERROR("Display_get failed ..\r\n");
			return -1;
		}

		//SYS_INFO("capbuf physaddr is %x,disbuf phys addr is %x\r\n",capbuf.physaddr,disbuf.physaddr);
	//	gettimeofday(&start,NULL);
		//memcpy(disbuf.virtaddr, capbuf.virtaddr, 720*480*2);
	//	Resize_exec(rszHandle, capbuf.physaddr, disbuf.physaddr);
	//	gettimeofday(&end,NULL);
	//	SYS_INFO("%dms", (end.tv_sec*1000 + end.tv_usec/1000) - (start.tv_sec*1000 + start.tv_usec/1000));
	//	SYS_INFO("start: sec%d, usec %d", start.tv_sec, start.tv_usec);
	//	SYS_INFO("end: sec%d, usec %d", end.tv_sec, end.tv_usec);
		set_osd(capbuf.virtaddr, drawtype, text, x, y);
		memcpy(disbuf.virtaddr, capbuf.virtaddr, 720*480*2);

		ret = Capture_put(Capphandle, &capbuf);
		if(ret < 0)
		{
			SYS_ERROR("Capture_get failed ..\r\n");
			return -1;
		}

		ret = Display_put(Disphandle, &disbuf);
		if(ret < 0)
		{
			SYS_ERROR("Display_get failed ..\r\n");
			return -1;
		}
	}
	return 0;
}
