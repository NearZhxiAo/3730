# Makefile.in generated by automake 1.10.1 from Makefile.am.
# test/ccs_amrb/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/POLICE_work
pkglibdir = $(libdir)/POLICE_work
pkgincludedir = $(includedir)/POLICE_work
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
sbin_PROGRAMS = ad_test$(EXEEXT)
subdir = test/ccs_amrb
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(sbindir)"
sbinPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(sbin_PROGRAMS)
am_ad_test_OBJECTS = agc2.$(OBJEXT) agc.$(OBJEXT) agc_init.$(OBJEXT) \
	agc_reset.$(OBJEXT) amr_global_var.$(OBJEXT) \
	amr_init.$(OBJEXT) a_refl.$(OBJEXT) autocorr.$(OBJEXT) \
	az_lsp.$(OBJEXT) basicop2.$(OBJEXT) bgn_scd.$(OBJEXT) \
	bgn_scd_init.$(OBJEXT) bgn_scd_reset.$(OBJEXT) \
	bin2int.$(OBJEXT) bits2prm.$(OBJEXT) build_cn_code.$(OBJEXT) \
	build_cn_param.$(OBJEXT) build_code_10i40_35bits.$(OBJEXT) \
	build_code_2i40_11bits.$(OBJEXT) \
	build_code_2i40_9bits.$(OBJEXT) \
	build_code_3i40_14bits.$(OBJEXT) \
	build_code_4i40_17bits.$(OBJEXT) \
	build_code_8i40_31bits.$(OBJEXT) calc_filt_energies.$(OBJEXT) \
	calc_target_energy.$(OBJEXT) calc_unfilt_energies.$(OBJEXT) \
	cb_gain_average.$(OBJEXT) cb_gain_average_init.$(OBJEXT) \
	cb_gain_average_reset.$(OBJEXT) cbsearch.$(OBJEXT) \
	chebps.$(OBJEXT) check_gp_clipping.$(OBJEXT) \
	check_lsp.$(OBJEXT) cl_ltp.$(OBJEXT) cl_ltp_init.$(OBJEXT) \
	cl_ltp_reset.$(OBJEXT) cod_amr.$(OBJEXT) \
	cod_amr_first.$(OBJEXT) cod_amr_init.$(OBJEXT) \
	cod_amr_reset.$(OBJEXT) code_10i40_35bits.$(OBJEXT) \
	code_2i40_11bits.$(OBJEXT) code_2i40_9bits.$(OBJEXT) \
	code_3i40_14bits.$(OBJEXT) code_4i40_17bits.$(OBJEXT) \
	code_8i40_31bits.$(OBJEXT) codec.$(OBJEXT) comp_corr.$(OBJEXT) \
	complex_estimate_adapt.$(OBJEXT) complex_vad.$(OBJEXT) \
	compress10.$(OBJEXT) compress_code.$(OBJEXT) \
	convolve.$(OBJEXT) copy.$(OBJEXT) cor_h.$(OBJEXT) \
	cor_h_x2.$(OBJEXT) cor_h_x.$(OBJEXT) \
	dec_10i40_35bits.$(OBJEXT) dec_8i40_31bits.$(OBJEXT) \
	dec_gain.$(OBJEXT) dec_lag3.$(OBJEXT) dec_lag6.$(OBJEXT) \
	decode_2i40_11bits.$(OBJEXT) decode_2i40_9bits.$(OBJEXT) \
	decode_3i40_14bits.$(OBJEXT) decode_4i40_17bits.$(OBJEXT) \
	decoder_amr.$(OBJEXT) decoder_amr_init.$(OBJEXT) \
	decoder_amr_reset.$(OBJEXT) decoder.$(OBJEXT) \
	decoder_homing_frame_test.$(OBJEXT) \
	decoder_homing_frame_test_first.$(OBJEXT) \
	decompress10.$(OBJEXT) decompress_code.$(OBJEXT) \
	d_gain_code.$(OBJEXT) d_gain_pitch.$(OBJEXT) \
	dhf_test.$(OBJEXT) d_plsf_3.$(OBJEXT) d_plsf_5.$(OBJEXT) \
	d_plsf_init.$(OBJEXT) d_plsf_reset.$(OBJEXT) \
	dtx_dec_activity_update.$(OBJEXT) dtx_dec.$(OBJEXT) \
	dtx_dec_init.$(OBJEXT) dtx_dec_reset.$(OBJEXT) \
	dtx_enc_buffer.$(OBJEXT) dtx_enc.$(OBJEXT) \
	dtx_enc_init.$(OBJEXT) dtx_enc_reset.$(OBJEXT) \
	ec_gain_code.$(OBJEXT) ec_gain_code_init.$(OBJEXT) \
	ec_gain_code_reset.$(OBJEXT) ec_gain_code_update.$(OBJEXT) \
	ec_gain_pitch.$(OBJEXT) ec_gain_pitch_init.$(OBJEXT) \
	ec_gain_pitch_reset.$(OBJEXT) ec_gain_pitch_update.$(OBJEXT) \
	enc_lag3.$(OBJEXT) enc_lag6.$(OBJEXT) encoder.$(OBJEXT) \
	encoder_homing_frame_test.$(OBJEXT) energy_new.$(OBJEXT) \
	energy_old.$(OBJEXT) ex_ctrl.$(OBJEXT) filter3.$(OBJEXT) \
	filter5.$(OBJEXT) filter_bank.$(OBJEXT) \
	first_filter_stage.$(OBJEXT) gain_adapt.$(OBJEXT) \
	gain_adapt_init.$(OBJEXT) gain_adapt_reset.$(OBJEXT) \
	gainquant.$(OBJEXT) gainquant_init.$(OBJEXT) \
	gainquant_reset.$(OBJEXT) g_code.$(OBJEXT) \
	gc_pred_average_limited.$(OBJEXT) gc_pred.$(OBJEXT) \
	gc_pred_copy.$(OBJEXT) gc_pred_init.$(OBJEXT) \
	gc_pred_reset.$(OBJEXT) gc_pred_update.$(OBJEXT) \
	get_lsp_pol.$(OBJEXT) getrange.$(OBJEXT) gmed_n.$(OBJEXT) \
	g_pitch.$(OBJEXT) hangover_addition.$(OBJEXT) hp_max.$(OBJEXT) \
	init_d_plsf_3.$(OBJEXT) int2bin.$(OBJEXT) \
	interpol_3or6.$(OBJEXT) int_lpc_1and3_2.$(OBJEXT) \
	int_lpc_1and3.$(OBJEXT) int_lpc_1to3_2.$(OBJEXT) \
	int_lpc_1to3.$(OBJEXT) int_lsf.$(OBJEXT) inv_sqrt.$(OBJEXT) \
	iuup_depack.$(OBJEXT) iuup_packet.$(OBJEXT) lag_max.$(OBJEXT) \
	lag_max_wgh.$(OBJEXT) lag_window.$(OBJEXT) \
	level_calculation.$(OBJEXT) levinson.$(OBJEXT) \
	levinson_init.$(OBJEXT) levinson_reset.$(OBJEXT) \
	log2.$(OBJEXT) log2_norm.$(OBJEXT) lpc.$(OBJEXT) \
	lpc_init.$(OBJEXT) lpc_reset.$(OBJEXT) lsf_lsp.$(OBJEXT) \
	lsf_wt.$(OBJEXT) lsp_avg.$(OBJEXT) lsp_avg_init.$(OBJEXT) \
	lsp_avg_reset.$(OBJEXT) lsp_az.$(OBJEXT) lsp.$(OBJEXT) \
	lsp_init.$(OBJEXT) lsp_lsf.$(OBJEXT) lsp_reset.$(OBJEXT) \
	mac_32.$(OBJEXT) main_pc.$(OBJEXT) main_pd.$(OBJEXT) \
	mr475_gain_quant.$(OBJEXT) mr475_quant_store_results.$(OBJEXT) \
	mr475_update_unq_pred.$(OBJEXT) \
	mr795_gain_code_quant3.$(OBJEXT) \
	mr795_gain_code_quant_mod.$(OBJEXT) mr795_gain_quant.$(OBJEXT) \
	noise_estimate_update.$(OBJEXT) norm_corr.$(OBJEXT) \
	ol_ltp.$(OBJEXT) oper_32b.$(OBJEXT) ph_disp.$(OBJEXT) \
	ph_disp_init.$(OBJEXT) ph_disp_lock.$(OBJEXT) \
	ph_disp_release.$(OBJEXT) ph_disp_reset.$(OBJEXT) \
	pitch_fr.$(OBJEXT) pitch_fr_init.$(OBJEXT) \
	pitch_fr_reset.$(OBJEXT) pitch_ol.$(OBJEXT) \
	pitch_ol_wgh.$(OBJEXT) p_ol_wgh_init.$(OBJEXT) \
	p_ol_wgh_reset.$(OBJEXT) post_filter.$(OBJEXT) \
	post_filter_init.$(OBJEXT) post_filter_reset.$(OBJEXT) \
	post_process.$(OBJEXT) post_process_init.$(OBJEXT) \
	post_process_reset.$(OBJEXT) pow2.$(OBJEXT) pre_big.$(OBJEXT) \
	pred_lt_3or6.$(OBJEXT) preemphasis.$(OBJEXT) \
	preemphasis_init.$(OBJEXT) preemphasis_reset.$(OBJEXT) \
	pre_process.$(OBJEXT) pre_process_init.$(OBJEXT) \
	pre_process_reset.$(OBJEXT) prm2bits.$(OBJEXT) \
	pseudonoise.$(OBJEXT) q_gain_code.$(OBJEXT) \
	q_gain_pitch.$(OBJEXT) q_p.$(OBJEXT) q_plsf_3.$(OBJEXT) \
	q_plsf_5.$(OBJEXT) q_plsf_init.$(OBJEXT) \
	q_plsf_reset.$(OBJEXT) qua_gain.$(OBJEXT) \
	reorder_lsf.$(OBJEXT) residu.$(OBJEXT) \
	rx_dtx_handler.$(OBJEXT) search_10and8i40.$(OBJEXT) \
	search_2i40_11bits.$(OBJEXT) search_2i40_9bits.$(OBJEXT) \
	search_3i40_14bits.$(OBJEXT) search_4i40_17bits.$(OBJEXT) \
	searchfrac.$(OBJEXT) serial_deorder.$(OBJEXT) \
	serial_order.$(OBJEXT) set_sign12k2.$(OBJEXT) \
	set_sign.$(OBJEXT) set_zero.$(OBJEXT) sid_sync.$(OBJEXT) \
	sid_sync_init.$(OBJEXT) sid_sync_reset.$(OBJEXT) \
	sid_sync_set_handover_debt.$(OBJEXT) \
	speech_decode_frame.$(OBJEXT) \
	speech_decode_frame_init.$(OBJEXT) \
	speech_decode_frame_reset.$(OBJEXT) \
	speech_encode_frame.$(OBJEXT) \
	speech_encode_frame_first.$(OBJEXT) \
	speech_encode_frame_init.$(OBJEXT) \
	speech_encode_frame_reset.$(OBJEXT) sqrt_l_exp.$(OBJEXT) \
	stdafx.$(OBJEXT) subframepostproc.$(OBJEXT) \
	subframepreproc.$(OBJEXT) syn_filt.$(OBJEXT) table.$(OBJEXT) \
	ton_stab_init.$(OBJEXT) ton_stab_reset.$(OBJEXT) \
	tx_dtx_handler.$(OBJEXT) update_cntrl.$(OBJEXT) \
	update_gp_clipping.$(OBJEXT) vad1.$(OBJEXT) \
	vad1_init.$(OBJEXT) vad1_reset.$(OBJEXT) \
	vad_complex_detection_update.$(OBJEXT) vad_decision.$(OBJEXT) \
	vad_pitch_detection.$(OBJEXT) vad_tone_detection.$(OBJEXT) \
	vad_tone_detection_update.$(OBJEXT) vq_subvec3.$(OBJEXT) \
	vq_subvec4.$(OBJEXT) vq_subvec.$(OBJEXT) vq_subvec_s.$(OBJEXT) \
	weight_ai.$(OBJEXT)
ad_test_OBJECTS = $(am_ad_test_OBJECTS)
ad_test_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(ad_test_SOURCES)
DIST_SOURCES = $(ad_test_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /opt/DAVINCI_DM6446_lab/framework/missing --run aclocal-1.10
AMTAR = ${SHELL} /opt/DAVINCI_DM6446_lab/framework/missing --run tar
AUTOCONF = ${SHELL} /opt/DAVINCI_DM6446_lab/framework/missing --run autoconf
AUTOHEADER = ${SHELL} /opt/DAVINCI_DM6446_lab/framework/missing --run autoheader
AUTOMAKE = ${SHELL} /opt/DAVINCI_DM6446_lab/framework/missing --run automake-1.10
AWK = mawk
CC = arm_v5t_le-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = arm_v5t_le-gcc -E
CPPFLAGS = 
CXX = arm_v5t_le-g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lpthread 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /opt/DAVINCI_DM6446_lab/framework/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = POLICE_work
PACKAGE_BUGREPORT = liangzhang@xidian.edu.cn
PACKAGE_NAME = POLICE_work
PACKAGE_STRING = POLICE_work 1.0
PACKAGE_TARNAME = police_work
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
RANLIB = arm_v5t_le-ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = arm_v5t_le-strip
VERSION = 1.0
abs_builddir = /opt/DAVINCI_DM6446_lab/framework/test/ccs_amrb
abs_srcdir = /opt/DAVINCI_DM6446_lab/framework/test/ccs_amrb
abs_top_builddir = /opt/DAVINCI_DM6446_lab/framework
abs_top_srcdir = /opt/DAVINCI_DM6446_lab/framework
ac_ct_CC = 
ac_ct_CXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = arm_v5t_le
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /opt/DAVINCI_DM6446_lab/framework/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /opt/DAVINCI_DM6446_lab/nfs/opt/install/work
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ../..
top_srcdir = ../..
INCLUDES = -I$(top_srcdir)/include -I./
AM_LDFLAGS = -L$(top_srcdir)/lib
ad_test_SOURCES = agc2.c agc.c agc_init.c agc_reset.c amr_global_var.c \
	amr_init.c a_refl.c autocorr.c az_lsp.c basicop2.c bgn_scd.c \
	bgn_scd_init.c bgn_scd_reset.c bin2int.c bits2prm.c \
	build_cn_code.c build_cn_param.c build_code_10i40_35bits.c \
	build_code_2i40_11bits.c build_code_2i40_9bits.c \
	build_code_3i40_14bits.c build_code_4i40_17bits.c \
	build_code_8i40_31bits.c calc_filt_energies.c \
	calc_target_energy.c calc_unfilt_energies.c cb_gain_average.c \
	cb_gain_average_init.c cb_gain_average_reset.c cbsearch.c \
	chebps.c check_gp_clipping.c check_lsp.c cl_ltp.c \
	cl_ltp_init.c cl_ltp_reset.c cod_amr.c cod_amr_first.c \
	cod_amr_init.c cod_amr_reset.c code_10i40_35bits.c \
	code_2i40_11bits.c code_2i40_9bits.c code_3i40_14bits.c \
	code_4i40_17bits.c code_8i40_31bits.c codec.c comp_corr.c \
	complex_estimate_adapt.c complex_vad.c compress10.c \
	compress_code.c convolve.c copy.c cor_h.c cor_h_x2.c cor_h_x.c \
	dec_10i40_35bits.c dec_8i40_31bits.c dec_gain.c dec_lag3.c \
	dec_lag6.c decode_2i40_11bits.c decode_2i40_9bits.c \
	decode_3i40_14bits.c decode_4i40_17bits.c decoder_amr.c \
	decoder_amr_init.c decoder_amr_reset.c decoder.c \
	decoder_homing_frame_test.c decoder_homing_frame_test_first.c \
	decompress10.c decompress_code.c d_gain_code.c d_gain_pitch.c \
	dhf_test.c d_plsf_3.c d_plsf_5.c d_plsf_init.c d_plsf_reset.c \
	dtx_dec_activity_update.c dtx_dec.c dtx_dec_init.c \
	dtx_dec_reset.c dtx_enc_buffer.c dtx_enc.c dtx_enc_init.c \
	dtx_enc_reset.c ec_gain_code.c ec_gain_code_init.c \
	ec_gain_code_reset.c ec_gain_code_update.c ec_gain_pitch.c \
	ec_gain_pitch_init.c ec_gain_pitch_reset.c \
	ec_gain_pitch_update.c enc_lag3.c enc_lag6.c encoder.c \
	encoder_homing_frame_test.c energy_new.c energy_old.c \
	ex_ctrl.c filter3.c filter5.c filter_bank.c \
	first_filter_stage.c gain_adapt.c gain_adapt_init.c \
	gain_adapt_reset.c gainquant.c gainquant_init.c \
	gainquant_reset.c g_code.c gc_pred_average_limited.c gc_pred.c \
	gc_pred_copy.c gc_pred_init.c gc_pred_reset.c gc_pred_update.c \
	get_lsp_pol.c getrange.c gmed_n.c g_pitch.c \
	hangover_addition.c hp_max.c init_d_plsf_3.c int2bin.c \
	interpol_3or6.c int_lpc_1and3_2.c int_lpc_1and3.c \
	int_lpc_1to3_2.c int_lpc_1to3.c int_lsf.c inv_sqrt.c \
	iuup_depack.c iuup_packet.c lag_max.c lag_max_wgh.c \
	lag_window.c level_calculation.c levinson.c levinson_init.c \
	levinson_reset.c log2.c log2_norm.c lpc.c lpc_init.c \
	lpc_reset.c lsf_lsp.c lsf_wt.c lsp_avg.c lsp_avg_init.c \
	lsp_avg_reset.c lsp_az.c lsp.c lsp_init.c lsp_lsf.c \
	lsp_reset.c mac_32.c main_pc.c main_pd.c mr475_gain_quant.c \
	mr475_quant_store_results.c mr475_update_unq_pred.c \
	mr795_gain_code_quant3.c mr795_gain_code_quant_mod.c \
	mr795_gain_quant.c noise_estimate_update.c norm_corr.c \
	ol_ltp.c oper_32b.c ph_disp.c ph_disp_init.c ph_disp_lock.c \
	ph_disp_release.c ph_disp_reset.c pitch_fr.c pitch_fr_init.c \
	pitch_fr_reset.c pitch_ol.c pitch_ol_wgh.c p_ol_wgh_init.c \
	p_ol_wgh_reset.c post_filter.c post_filter_init.c \
	post_filter_reset.c post_process.c post_process_init.c \
	post_process_reset.c pow2.c pre_big.c pred_lt_3or6.c \
	preemphasis.c preemphasis_init.c preemphasis_reset.c \
	pre_process.c pre_process_init.c pre_process_reset.c \
	prm2bits.c pseudonoise.c q_gain_code.c q_gain_pitch.c q_p.c \
	q_plsf_3.c q_plsf_5.c q_plsf_init.c q_plsf_reset.c qua_gain.c \
	reorder_lsf.c residu.c rx_dtx_handler.c search_10and8i40.c \
	search_2i40_11bits.c search_2i40_9bits.c search_3i40_14bits.c \
	search_4i40_17bits.c searchfrac.c serial_deorder.c \
	serial_order.c set_sign12k2.c set_sign.c set_zero.c sid_sync.c \
	sid_sync_init.c sid_sync_reset.c sid_sync_set_handover_debt.c \
	speech_decode_frame.c speech_decode_frame_init.c \
	speech_decode_frame_reset.c speech_encode_frame.c \
	speech_encode_frame_first.c speech_encode_frame_init.c \
	speech_encode_frame_reset.c sqrt_l_exp.c stdafx.c \
	subframepostproc.c subframepreproc.c syn_filt.c table.c \
	ton_stab_init.c ton_stab_reset.c tx_dtx_handler.c \
	update_cntrl.c update_gp_clipping.c vad1.c vad1_init.c \
	vad1_reset.c vad_complex_detection_update.c vad_decision.c \
	vad_pitch_detection.c vad_tone_detection.c \
	vad_tone_detection_update.c vq_subvec3.c vq_subvec4.c \
	vq_subvec.c vq_subvec_s.c weight_ai.c

#ad_test_SOURCES = $(wildcard *.c)
ad_test_LDADD = 
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  test/ccs_amrb/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  test/ccs_amrb/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(sbindir)" || $(MKDIR_P) "$(DESTDIR)$(sbindir)"
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(sbinPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(sbindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(sbinPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(sbindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(sbindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(sbindir)/$$f"; \
	done

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)
ad_test$(EXEEXT): $(ad_test_OBJECTS) $(ad_test_DEPENDENCIES) 
	@rm -f ad_test$(EXEEXT)
	$(LINK) $(ad_test_OBJECTS) $(ad_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/a_refl.Po
include ./$(DEPDIR)/agc.Po
include ./$(DEPDIR)/agc2.Po
include ./$(DEPDIR)/agc_init.Po
include ./$(DEPDIR)/agc_reset.Po
include ./$(DEPDIR)/amr_global_var.Po
include ./$(DEPDIR)/amr_init.Po
include ./$(DEPDIR)/autocorr.Po
include ./$(DEPDIR)/az_lsp.Po
include ./$(DEPDIR)/basicop2.Po
include ./$(DEPDIR)/bgn_scd.Po
include ./$(DEPDIR)/bgn_scd_init.Po
include ./$(DEPDIR)/bgn_scd_reset.Po
include ./$(DEPDIR)/bin2int.Po
include ./$(DEPDIR)/bits2prm.Po
include ./$(DEPDIR)/build_cn_code.Po
include ./$(DEPDIR)/build_cn_param.Po
include ./$(DEPDIR)/build_code_10i40_35bits.Po
include ./$(DEPDIR)/build_code_2i40_11bits.Po
include ./$(DEPDIR)/build_code_2i40_9bits.Po
include ./$(DEPDIR)/build_code_3i40_14bits.Po
include ./$(DEPDIR)/build_code_4i40_17bits.Po
include ./$(DEPDIR)/build_code_8i40_31bits.Po
include ./$(DEPDIR)/calc_filt_energies.Po
include ./$(DEPDIR)/calc_target_energy.Po
include ./$(DEPDIR)/calc_unfilt_energies.Po
include ./$(DEPDIR)/cb_gain_average.Po
include ./$(DEPDIR)/cb_gain_average_init.Po
include ./$(DEPDIR)/cb_gain_average_reset.Po
include ./$(DEPDIR)/cbsearch.Po
include ./$(DEPDIR)/chebps.Po
include ./$(DEPDIR)/check_gp_clipping.Po
include ./$(DEPDIR)/check_lsp.Po
include ./$(DEPDIR)/cl_ltp.Po
include ./$(DEPDIR)/cl_ltp_init.Po
include ./$(DEPDIR)/cl_ltp_reset.Po
include ./$(DEPDIR)/cod_amr.Po
include ./$(DEPDIR)/cod_amr_first.Po
include ./$(DEPDIR)/cod_amr_init.Po
include ./$(DEPDIR)/cod_amr_reset.Po
include ./$(DEPDIR)/code_10i40_35bits.Po
include ./$(DEPDIR)/code_2i40_11bits.Po
include ./$(DEPDIR)/code_2i40_9bits.Po
include ./$(DEPDIR)/code_3i40_14bits.Po
include ./$(DEPDIR)/code_4i40_17bits.Po
include ./$(DEPDIR)/code_8i40_31bits.Po
include ./$(DEPDIR)/codec.Po
include ./$(DEPDIR)/comp_corr.Po
include ./$(DEPDIR)/complex_estimate_adapt.Po
include ./$(DEPDIR)/complex_vad.Po
include ./$(DEPDIR)/compress10.Po
include ./$(DEPDIR)/compress_code.Po
include ./$(DEPDIR)/convolve.Po
include ./$(DEPDIR)/copy.Po
include ./$(DEPDIR)/cor_h.Po
include ./$(DEPDIR)/cor_h_x.Po
include ./$(DEPDIR)/cor_h_x2.Po
include ./$(DEPDIR)/d_gain_code.Po
include ./$(DEPDIR)/d_gain_pitch.Po
include ./$(DEPDIR)/d_plsf_3.Po
include ./$(DEPDIR)/d_plsf_5.Po
include ./$(DEPDIR)/d_plsf_init.Po
include ./$(DEPDIR)/d_plsf_reset.Po
include ./$(DEPDIR)/dec_10i40_35bits.Po
include ./$(DEPDIR)/dec_8i40_31bits.Po
include ./$(DEPDIR)/dec_gain.Po
include ./$(DEPDIR)/dec_lag3.Po
include ./$(DEPDIR)/dec_lag6.Po
include ./$(DEPDIR)/decode_2i40_11bits.Po
include ./$(DEPDIR)/decode_2i40_9bits.Po
include ./$(DEPDIR)/decode_3i40_14bits.Po
include ./$(DEPDIR)/decode_4i40_17bits.Po
include ./$(DEPDIR)/decoder.Po
include ./$(DEPDIR)/decoder_amr.Po
include ./$(DEPDIR)/decoder_amr_init.Po
include ./$(DEPDIR)/decoder_amr_reset.Po
include ./$(DEPDIR)/decoder_homing_frame_test.Po
include ./$(DEPDIR)/decoder_homing_frame_test_first.Po
include ./$(DEPDIR)/decompress10.Po
include ./$(DEPDIR)/decompress_code.Po
include ./$(DEPDIR)/dhf_test.Po
include ./$(DEPDIR)/dtx_dec.Po
include ./$(DEPDIR)/dtx_dec_activity_update.Po
include ./$(DEPDIR)/dtx_dec_init.Po
include ./$(DEPDIR)/dtx_dec_reset.Po
include ./$(DEPDIR)/dtx_enc.Po
include ./$(DEPDIR)/dtx_enc_buffer.Po
include ./$(DEPDIR)/dtx_enc_init.Po
include ./$(DEPDIR)/dtx_enc_reset.Po
include ./$(DEPDIR)/ec_gain_code.Po
include ./$(DEPDIR)/ec_gain_code_init.Po
include ./$(DEPDIR)/ec_gain_code_reset.Po
include ./$(DEPDIR)/ec_gain_code_update.Po
include ./$(DEPDIR)/ec_gain_pitch.Po
include ./$(DEPDIR)/ec_gain_pitch_init.Po
include ./$(DEPDIR)/ec_gain_pitch_reset.Po
include ./$(DEPDIR)/ec_gain_pitch_update.Po
include ./$(DEPDIR)/enc_lag3.Po
include ./$(DEPDIR)/enc_lag6.Po
include ./$(DEPDIR)/encoder.Po
include ./$(DEPDIR)/encoder_homing_frame_test.Po
include ./$(DEPDIR)/energy_new.Po
include ./$(DEPDIR)/energy_old.Po
include ./$(DEPDIR)/ex_ctrl.Po
include ./$(DEPDIR)/filter3.Po
include ./$(DEPDIR)/filter5.Po
include ./$(DEPDIR)/filter_bank.Po
include ./$(DEPDIR)/first_filter_stage.Po
include ./$(DEPDIR)/g_code.Po
include ./$(DEPDIR)/g_pitch.Po
include ./$(DEPDIR)/gain_adapt.Po
include ./$(DEPDIR)/gain_adapt_init.Po
include ./$(DEPDIR)/gain_adapt_reset.Po
include ./$(DEPDIR)/gainquant.Po
include ./$(DEPDIR)/gainquant_init.Po
include ./$(DEPDIR)/gainquant_reset.Po
include ./$(DEPDIR)/gc_pred.Po
include ./$(DEPDIR)/gc_pred_average_limited.Po
include ./$(DEPDIR)/gc_pred_copy.Po
include ./$(DEPDIR)/gc_pred_init.Po
include ./$(DEPDIR)/gc_pred_reset.Po
include ./$(DEPDIR)/gc_pred_update.Po
include ./$(DEPDIR)/get_lsp_pol.Po
include ./$(DEPDIR)/getrange.Po
include ./$(DEPDIR)/gmed_n.Po
include ./$(DEPDIR)/hangover_addition.Po
include ./$(DEPDIR)/hp_max.Po
include ./$(DEPDIR)/init_d_plsf_3.Po
include ./$(DEPDIR)/int2bin.Po
include ./$(DEPDIR)/int_lpc_1and3.Po
include ./$(DEPDIR)/int_lpc_1and3_2.Po
include ./$(DEPDIR)/int_lpc_1to3.Po
include ./$(DEPDIR)/int_lpc_1to3_2.Po
include ./$(DEPDIR)/int_lsf.Po
include ./$(DEPDIR)/interpol_3or6.Po
include ./$(DEPDIR)/inv_sqrt.Po
include ./$(DEPDIR)/iuup_depack.Po
include ./$(DEPDIR)/iuup_packet.Po
include ./$(DEPDIR)/lag_max.Po
include ./$(DEPDIR)/lag_max_wgh.Po
include ./$(DEPDIR)/lag_window.Po
include ./$(DEPDIR)/level_calculation.Po
include ./$(DEPDIR)/levinson.Po
include ./$(DEPDIR)/levinson_init.Po
include ./$(DEPDIR)/levinson_reset.Po
include ./$(DEPDIR)/log2.Po
include ./$(DEPDIR)/log2_norm.Po
include ./$(DEPDIR)/lpc.Po
include ./$(DEPDIR)/lpc_init.Po
include ./$(DEPDIR)/lpc_reset.Po
include ./$(DEPDIR)/lsf_lsp.Po
include ./$(DEPDIR)/lsf_wt.Po
include ./$(DEPDIR)/lsp.Po
include ./$(DEPDIR)/lsp_avg.Po
include ./$(DEPDIR)/lsp_avg_init.Po
include ./$(DEPDIR)/lsp_avg_reset.Po
include ./$(DEPDIR)/lsp_az.Po
include ./$(DEPDIR)/lsp_init.Po
include ./$(DEPDIR)/lsp_lsf.Po
include ./$(DEPDIR)/lsp_reset.Po
include ./$(DEPDIR)/mac_32.Po
include ./$(DEPDIR)/main_pc.Po
include ./$(DEPDIR)/main_pd.Po
include ./$(DEPDIR)/mr475_gain_quant.Po
include ./$(DEPDIR)/mr475_quant_store_results.Po
include ./$(DEPDIR)/mr475_update_unq_pred.Po
include ./$(DEPDIR)/mr795_gain_code_quant3.Po
include ./$(DEPDIR)/mr795_gain_code_quant_mod.Po
include ./$(DEPDIR)/mr795_gain_quant.Po
include ./$(DEPDIR)/noise_estimate_update.Po
include ./$(DEPDIR)/norm_corr.Po
include ./$(DEPDIR)/ol_ltp.Po
include ./$(DEPDIR)/oper_32b.Po
include ./$(DEPDIR)/p_ol_wgh_init.Po
include ./$(DEPDIR)/p_ol_wgh_reset.Po
include ./$(DEPDIR)/ph_disp.Po
include ./$(DEPDIR)/ph_disp_init.Po
include ./$(DEPDIR)/ph_disp_lock.Po
include ./$(DEPDIR)/ph_disp_release.Po
include ./$(DEPDIR)/ph_disp_reset.Po
include ./$(DEPDIR)/pitch_fr.Po
include ./$(DEPDIR)/pitch_fr_init.Po
include ./$(DEPDIR)/pitch_fr_reset.Po
include ./$(DEPDIR)/pitch_ol.Po
include ./$(DEPDIR)/pitch_ol_wgh.Po
include ./$(DEPDIR)/post_filter.Po
include ./$(DEPDIR)/post_filter_init.Po
include ./$(DEPDIR)/post_filter_reset.Po
include ./$(DEPDIR)/post_process.Po
include ./$(DEPDIR)/post_process_init.Po
include ./$(DEPDIR)/post_process_reset.Po
include ./$(DEPDIR)/pow2.Po
include ./$(DEPDIR)/pre_big.Po
include ./$(DEPDIR)/pre_process.Po
include ./$(DEPDIR)/pre_process_init.Po
include ./$(DEPDIR)/pre_process_reset.Po
include ./$(DEPDIR)/pred_lt_3or6.Po
include ./$(DEPDIR)/preemphasis.Po
include ./$(DEPDIR)/preemphasis_init.Po
include ./$(DEPDIR)/preemphasis_reset.Po
include ./$(DEPDIR)/prm2bits.Po
include ./$(DEPDIR)/pseudonoise.Po
include ./$(DEPDIR)/q_gain_code.Po
include ./$(DEPDIR)/q_gain_pitch.Po
include ./$(DEPDIR)/q_p.Po
include ./$(DEPDIR)/q_plsf_3.Po
include ./$(DEPDIR)/q_plsf_5.Po
include ./$(DEPDIR)/q_plsf_init.Po
include ./$(DEPDIR)/q_plsf_reset.Po
include ./$(DEPDIR)/qua_gain.Po
include ./$(DEPDIR)/reorder_lsf.Po
include ./$(DEPDIR)/residu.Po
include ./$(DEPDIR)/rx_dtx_handler.Po
include ./$(DEPDIR)/search_10and8i40.Po
include ./$(DEPDIR)/search_2i40_11bits.Po
include ./$(DEPDIR)/search_2i40_9bits.Po
include ./$(DEPDIR)/search_3i40_14bits.Po
include ./$(DEPDIR)/search_4i40_17bits.Po
include ./$(DEPDIR)/searchfrac.Po
include ./$(DEPDIR)/serial_deorder.Po
include ./$(DEPDIR)/serial_order.Po
include ./$(DEPDIR)/set_sign.Po
include ./$(DEPDIR)/set_sign12k2.Po
include ./$(DEPDIR)/set_zero.Po
include ./$(DEPDIR)/sid_sync.Po
include ./$(DEPDIR)/sid_sync_init.Po
include ./$(DEPDIR)/sid_sync_reset.Po
include ./$(DEPDIR)/sid_sync_set_handover_debt.Po
include ./$(DEPDIR)/speech_decode_frame.Po
include ./$(DEPDIR)/speech_decode_frame_init.Po
include ./$(DEPDIR)/speech_decode_frame_reset.Po
include ./$(DEPDIR)/speech_encode_frame.Po
include ./$(DEPDIR)/speech_encode_frame_first.Po
include ./$(DEPDIR)/speech_encode_frame_init.Po
include ./$(DEPDIR)/speech_encode_frame_reset.Po
include ./$(DEPDIR)/sqrt_l_exp.Po
include ./$(DEPDIR)/stdafx.Po
include ./$(DEPDIR)/subframepostproc.Po
include ./$(DEPDIR)/subframepreproc.Po
include ./$(DEPDIR)/syn_filt.Po
include ./$(DEPDIR)/table.Po
include ./$(DEPDIR)/ton_stab_init.Po
include ./$(DEPDIR)/ton_stab_reset.Po
include ./$(DEPDIR)/tx_dtx_handler.Po
include ./$(DEPDIR)/update_cntrl.Po
include ./$(DEPDIR)/update_gp_clipping.Po
include ./$(DEPDIR)/vad1.Po
include ./$(DEPDIR)/vad1_init.Po
include ./$(DEPDIR)/vad1_reset.Po
include ./$(DEPDIR)/vad_complex_detection_update.Po
include ./$(DEPDIR)/vad_decision.Po
include ./$(DEPDIR)/vad_pitch_detection.Po
include ./$(DEPDIR)/vad_tone_detection.Po
include ./$(DEPDIR)/vad_tone_detection_update.Po
include ./$(DEPDIR)/vq_subvec.Po
include ./$(DEPDIR)/vq_subvec3.Po
include ./$(DEPDIR)/vq_subvec4.Po
include ./$(DEPDIR)/vq_subvec_s.Po
include ./$(DEPDIR)/weight_ai.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(sbindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-sbinPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-sbinPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-sbinPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-sbinPROGRAMS install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-sbinPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
