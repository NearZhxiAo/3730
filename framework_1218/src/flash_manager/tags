!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/opt\/sdb\/framework_1209\/missing --run aclocal-1.11$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
AMTAR	Makefile	/^AMTAR = ${SHELL} \/opt\/sdb\/framework_1209\/missing --run tar$/;"	m
AM_LDFLAGS	Makefile	/^AM_LDFLAGS = -L$(top_srcdir)\/lib$/;"	m
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/opt\/sdb\/framework_1209\/missing --run autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/opt\/sdb\/framework_1209\/missing --run autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/opt\/sdb\/framework_1209\/missing --run automake-1.11$/;"	m
AWK	Makefile	/^AWK = gawk$/;"	m
CC	Makefile	/^CC = arm-none-linux-gnueabi-gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2$/;"	m
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CPP	Makefile	/^CPP = arm-none-linux-gnueabi-gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CXX	Makefile	/^CXX = arm-none-linux-gnueabi-g++$/;"	m
CXXDEPMODE	Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -g -O2$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(flash_manager_SOURCES)$/;"	m
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
ETAGS	Makefile	/^ETAGS = etags$/;"	m
EXEEXT	Makefile	/^EXEEXT = $/;"	m
FILEFLAG_INVALID	flash_private.h	22;"	d
FILEFLAG_VALID	flash_private.h	21;"	d
FILENAME_LENGTH	flash_private.h	24;"	d
FILE_INVALID	flash_unix.c	/^static int FILE_INVALID = FILEFLAG_INVALID;$/;"	v	file:
FILE_VALID	flash_unix.c	/^static int FILE_VALID 	= FILEFLAG_VALID;$/;"	v	file:
FLASH_MOUNTPOINT_1	flash_private.h	27;"	d
FLASH_MOUNTPOINT_2	flash_private.h	28;"	d
FLASH_OPT_CLEAR	flash_private.h	/^    FLASH_OPT_CLEAR,$/;"	e	enum:_FLASH_OPT_FLAG
FLASH_OPT_END	flash_private.h	/^    FLASH_OPT_END,$/;"	e	enum:_FLASH_OPT_FLAG
FLASH_OPT_FLAG	flash_private.h	/^}FLASH_OPT_FLAG;$/;"	t	typeref:enum:_FLASH_OPT_FLAG
FLASH_OPT_SAVE	flash_private.h	/^    FLASH_OPT_SAVE,$/;"	e	enum:_FLASH_OPT_FLAG
FLASH_OPT_START	flash_private.h	/^    FLASH_OPT_START,$/;"	e	enum:_FLASH_OPT_FLAG
FLASH_POLL_COUNT_MAX	flash_private.h	33;"	d
FLASH_PRIVATE_HANDLE	flash_private.h	/^}FLASH_PRIVATE_HANDLE;\/\/flsh模块的全局句柄$/;"	t	typeref:struct:_FLASH_PRIVATE_HANDLE
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
INCLUDES	Makefile	/^INCLUDES = -I$(top_srcdir)\/include$/;"	m
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
IsFlashSysQuit	flash_main.c	/^static int IsFlashSysQuit = 0;$/;"	v	file:
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = -lpthread $/;"	m
LINK	Makefile	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/opt\/sdb\/framework_1209\/missing --run makeinfo$/;"	m
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
PACKAGE	Makefile	/^PACKAGE = POLICE_work$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = liangzhang@xidian.edu.cn$/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = POLICE_work$/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = POLICE_work 1.0$/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = police_work$/;"	m
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 1.0$/;"	m
PARA_FIRST_FILE_NAME	flash_private.h	17;"	d
PARA_SEC_FILE_NAME	flash_private.h	18;"	d
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PROGRAMS	Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
RANLIB	Makefile	/^RANLIB = arm-none-linux-gnueabi-ranlib$/;"	m
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SOURCES	Makefile	/^SOURCES = $(flash_manager_SOURCES)$/;"	m
STRIP	Makefile	/^STRIP = arm-none-linux-gnueabi-strip$/;"	m
UpdateThread	flash_main.c	/^pthread_t           UpdateThread;$/;"	v
VERSION	Makefile	/^VERSION = 1.0$/;"	m
_FLASH_OPT_FLAG	flash_private.h	/^typedef enum _FLASH_OPT_FLAG$/;"	g
_FLASH_PRIVATE_HANDLE	flash_private.h	/^typedef struct _FLASH_PRIVATE_HANDLE$/;"	s
_FLASH_PRIVATE_H__	flash_private.h	2;"	d
_FLASH_UNIX_H__	flash_unix.h	2;"	d
abs_builddir	Makefile	/^abs_builddir = \/opt\/sdb\/framework_1209\/src\/flash_manager$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/opt\/sdb\/framework_1209\/src\/flash_manager$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/opt\/sdb\/framework_1209$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/opt\/sdb\/framework_1209$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = $/;"	m
ac_ct_CXX	Makefile	/^ac_ct_CXX = $/;"	m
active_fdcount	flash_private.h	/^    int active_fdcount;	\/\/活动的套接字数 <= FLASH_POLL_COUNT_MAX$/;"	m	struct:_FLASH_PRIVATE_HANDLE
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.ac$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)"$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__mv	Makefile	/^am__mv = mv -f$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__tar	Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__untar	Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am_flash_manager_OBJECTS	Makefile	/^am_flash_manager_OBJECTS = flash_main.$(OBJEXT) flash_unix.$(OBJEXT)$/;"	m
bin_PROGRAMS	Makefile	/^bin_PROGRAMS = flash_manager$(EXEEXT)$/;"	m
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
builddir	Makefile	/^builddir = .$/;"	m
clear_saveparam_flag	flash_unix.h	/^static inline void clear_saveparam_flag(FLASH_PRIVATE_HANDLE *phandle)$/;"	f
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
flash_exit	flash_main.c	/^static succeed_type flash_exit(FLASH_PRIVATE_HANDLE *phandle)$/;"	f	file:
flash_init	flash_main.c	/^static succeed_type flash_init(FLASH_PRIVATE_HANDLE *phandle)$/;"	f	file:
flash_manager_DEPENDENCIES	Makefile	/^flash_manager_DEPENDENCIES =$/;"	m
flash_manager_LDADD	Makefile	/^flash_manager_LDADD = -lunix -lgbshm -lsignal$/;"	m
flash_manager_OBJECTS	Makefile	/^flash_manager_OBJECTS = $(am_flash_manager_OBJECTS)$/;"	m
flash_manager_SOURCES	Makefile	/^flash_manager_SOURCES = flash_main.c flash_unix.c	$/;"	m
flash_para_load	flash_unix.c	/^succeed_type flash_para_load(void *arg)$/;"	f
flash_para_save	flash_unix.c	/^succeed_type flash_para_save(void *arg)$/;"	f
flash_poll_init	flash_main.c	/^static void flash_poll_init(FLASH_PRIVATE_HANDLE *phandle)$/;"	f	file:
flash_set_default	flash_unix.c	/^succeed_type flash_set_default(void *arg)$/;"	f
flash_unix	flash_unix.c	/^succeed_type flash_unix(FLASH_PRIVATE_HANDLE *phandle)$/;"	f
flash_unix_deal	flash_unix.c	/^static succeed_type flash_unix_deal( FLASH_PRIVATE_HANDLE *phandle, UNIX_CMD_STRUCT *pcmd)$/;"	f	file:
flash_updatethread_func	flash_main.c	/^void flash_updatethread_func(void * arg)$/;"	f
gbshm_handle	flash_private.h	/^    LIBGBSHM_OBJ  *gbshm_handle;		\/\/gbshm句柄$/;"	m	struct:_FLASH_PRIVATE_HANDLE
get_param_mount	flash_unix.c	/^static succeed_type get_param_mount(char *param_first,char *param_second)$/;"	f	file:
get_saveparam_flag	flash_unix.h	/^static inline void get_saveparam_flag(FLASH_PRIVATE_HANDLE *phandle,FLASH_OPT_FLAG *opt_flag)$/;"	f
global_flash_private_handle	flash_main.c	/^FLASH_PRIVATE_HANDLE global_flash_private_handle;$/;"	v
host_alias	Makefile	/^host_alias = arm-none-linux-gnueabi$/;"	m
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
install_sh	Makefile	/^install_sh = ${SHELL} \/opt\/sdb\/framework_1209\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
main	flash_main.c	/^int main(int argc, char **argv)$/;"	f
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mkdir_p	Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mutex	flash_private.h	/^    pthread_mutex_t mutex;   \/\/对opt_flag 操作的互斥量$/;"	m	struct:_FLASH_PRIVATE_HANDLE
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
opt_flag	flash_private.h	/^    FLASH_OPT_FLAG opt_flag;   \/\/flash管理的操作标识$/;"	m	struct:_FLASH_PRIVATE_HANDLE
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/POLICE_work$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/POLICE_work$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/POLICE_work$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/POLICE_work$/;"	m
polltimeout	flash_private.h	/^    struct pollfd polltimeout[FLASH_POLL_COUNT_MAX];	\/\/poll加入的描述符集$/;"	m	struct:_FLASH_PRIVATE_HANDLE	typeref:struct:_FLASH_PRIVATE_HANDLE::pollfd
prefix	Makefile	/^prefix = \/opt\/sdb\/rootfs\/opt\/install$/;"	m
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
psdir	Makefile	/^psdir = ${docdir}$/;"	m
savesize	flash_private.h	/^    int savesize;   \/\/从flash将参数拷贝到共享缓冲的数据大小$/;"	m	struct:_FLASH_PRIVATE_HANDLE
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
set_saveparam_flag	flash_unix.h	/^static inline void set_saveparam_flag(FLASH_PRIVATE_HANDLE *phandle)$/;"	f
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sig_handle_proc	flash_main.c	/^void sig_handle_proc(int sig)$/;"	f
srcdir	Makefile	/^srcdir = .$/;"	m
subdir	Makefile	/^subdir = src\/flash_manager$/;"	m
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
top_build_prefix	Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_builddir	Makefile	/^top_builddir = ..\/..$/;"	m
top_srcdir	Makefile	/^top_srcdir = ..\/..$/;"	m
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
unix_fd	flash_private.h	/^    int unix_fd;	\/\/unix域套接字$/;"	m	struct:_FLASH_PRIVATE_HANDLE
